
# OWON AI Cloudflare 项目结构指南

## 核心架构
- 基于 **Next.js 15 (App Router)** + **OpenNext** 部署到 Cloudflare
- 使用 **D1 数据库** 作为数据层
- 通过 **pnpm** 管理依赖（已配置 hoisted 模式避免 Windows 路径长度限制）

## 目录结构
```
owon_ai_cloudflare/
├─ nextjs/                    # 主应用目录
│  ├─ src/app/               # Next.js App Router 页面和 API
│  │  ├─ api/test/d1/        # D1 数据库测试接口示例
│  │  ├─ layout.tsx          # 根布局组件
│  │  └─ page.tsx            # 首页组件
│  ├─ public/                # 静态资源
│  ├─ .npmrc                 # pnpm 配置（node-linker=hoisted）
│  ├─ wrangler.jsonc         # Cloudflare Workers & D1 配置
│  └─ package.json           # 依赖和脚本定义
├─ doc/dev/                  # 开发文档
└─ README.md                 # 项目说明文档
```

## 关键文件说明
- [wrangler.jsonc](mdc:nextjs/wrangler.jsonc) - Cloudflare 部署配置
- [next.config.ts](mdc:nextjs/next.config.ts) - Next.js 配置
- [open-next.config.ts](mdc:nextjs/open-next.config.ts) - OpenNext 配置
- [package.json](mdc:nextjs/package.json) - 项目依赖和脚本
- [.npmrc](mdc:nextjs/.npmrc) - pnpm 配置（解决 Windows 路径长度问题）

## API 路由示例
参考 [route.ts](mdc:nextjs/src/app/api/test/d1/route.ts) 了解如何在 Cloudflare Workers 中使用 D1 数据库。

## API 路由示例
参考 [route.ts](mdc:nextjs/src/app/api/test/d1/route.ts) 了解如何在 Cloudflare Workers 中使用 D1 数据库。
