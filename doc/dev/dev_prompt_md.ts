
----------------------
# 任务：仪器，系列链接进入chat页面

```
// ------ 第1步 ------
让你成为专业的产品经理的角度，请先了解 chat/页面的实现，需要进行一下修改：

1. 将@page.tsx 设置为首页。
2. 对ChatSidebar增加能够收起和展开的功能。
3. 整个页面需要兼容桌面与移动网页。
4. 设计感要高，同时保持简洁。

对以上修改，分析需要做哪些事情，还有哪些我还没有考虑到的，请一并提出。

// ------ 第2步 ------
请根据以上分析，不需要执行pnpm run check。
请先规划todo，然后再执行。

```





# 任务：注册登录
```
// ------ 第1步 ------
我需要增加用户系统功能。有以下需求：
1. 用户可以注册登录，注册采用邮箱作为用户名，密码采用bcrypt加密。
2. 用户可以修改密码。
3. UX要求：
    - 用户未登陆时：
        - 检测左侧聊天历史列表，如果为空，并且第一次发送问题给AI，就会自动注册一个临时账号用户ID， 用户的ID长度为10位，用户ID为随机字符串，邮箱为空，密码为空，与浏览器的cookie绑定。
        - 临时账号一天只能使用20次聊天，当达到20次时弹出对话框提示：“游客只能每天进行20次对话，您已达到20次聊天次数，请登录或注册账号从而获得每天100次对话次数”
        - 临时账号的聊天记录，会保存到数据库。
        - 在/chat页面的右上角显示注册和登陆按钮，点击后弹出注册和登陆对话框。
    - 用户已登陆时：
        - 在/chat页面的右上角显示用户名邮箱的第一个字符加圆形底色，点击后弹出下拉菜单。
        - 下拉菜单包含：邮箱，设置，登出。
            - 邮箱不可点击。
            - 点击设置，弹出设置窗口，默认进入账户设置。
            - 点击登出，提示：“登出成功”，然后跳转到/chat页面，清空左侧聊天历史列表，并且刷新页面。
        - 登陆的用户，可以每天使用100次对话次数。当达到100次时弹出对话框提示：“您已达到100次对话次数，请明天再来”
    - 设置弹窗
        - 包含导航菜单和内容区域。导航菜单包含：账户，通用
        - 账户菜单点击后，内容区域显示：邮箱，修改密码，剩余对话次数/每天总对话次数。
        - 通用菜单点击后，内容区域显示：新建对话默认机型, 下拉框选择机型（ADS800A, ADS900A, ADS3000, ADS3000A, ADS4000, ADS4000A）。
    - 用户注册页面
        - 注册页面包含：邮箱，密码，确认密码，注册按钮。
        - 点击注册时会验证邮箱是否合法，密码需要大于6位，并且需要与确认密码一致。如果验证通过，再判断邮箱是否已注册，如果已注册则提示：“邮箱已注册”，如果未注册则提示：“注册成功”，然后跳转到/chat页面，将左侧聊天历史列表关联到该用户，并且跳转到/chat页面。
    - 用户登陆页面
        - 登陆页面包含：邮箱，密码，登陆按钮。
        - 点击登陆时会验证邮箱是否合法，密码需要大于等于8位，需要简单的验证码。如果验证通过，将左侧聊天历史列表关联到该用户，并且跳转到/chat页面。

4. 聊天次数的统计与重置
这个逻辑需要在后端实现。需要在用户数据表（User model）中增加两个字段：`chat_count` (整数) 和 `last_chat_date` (日期)。 每次用户发起对话时，后端 API 需要：
    - 获取当前用户信息。
    - 检查 `last_chat_date` 是否是今天。
    - 如果不是今天，将 `chat_count` 重置为1，并更新 `last_chat_date` 为今天。
    - 如果是今天，检查 `chat_count` 是否已达到上限。
    - 如果未达上限，`chat_count` 加 1。
    - 如果已达上限，返回错误信息。

技术要求：
1. 使用NextAuth.js作为用户系统。
2. 使用shadcn/ui作为组件库。
3. 使用tailwindcss作为样式库。
4. 使用react-hook-form作为表单库。
5. 使用zod 与 react-hook-form作为表单验证库。


请以产品经理的角度，请先了解代码，然后分析需要做哪些事情，哪些我没考虑到的也一并列出来。

// ------ 第2步 ------
根据以上分析除了以下3点需要变动外，其他都要考虑在内：
1.SSE 流未结束时用户可能已点 Like，该如何记录？——处理方案：（可在流结束收到后/chat页面才显示复制，点赞和点踩的图标）；
2.数据统计/分析（后台可能要看哪些回答满意）。列为后续迭代。——不需要管后台事务，以后会处理；
3.文档 & README 更新。——不需要；

补充：相关sql在@/sql 中；

请先规划todo，然后再执行。
```




# 任务：修改 @page.tsx 能够进行多轮对话。      
## 要求：
-请先了解项目相关的实现，分析怎么做，然后规划todo（在规划todo时，需要细分每一项，每个todo项目必须测试通过后才能进入下一项目），最后执行。


# 任务：修改登录后进入protect页面需要修改成进入到chat页面。  
## 要求：
- 请先读相关代码，分析怎么做，然后规划todo（在规划todo时，需要细分每一项，每个todo项目必须测试通过后才能进入下一项目），最后执行和测试。


# 任务：请解析 TODO 的实现。    
## 要求：
- 包含架构，目录文件，类，接口，方法，使用框架图，流程图，将解析文档编写到 doc/todo/README_TODO.md中。




