# **OWON 小欧AI 助手 - “FAQ常见问答集”功能需求文档**

## 1. 功能概述

**FAQ 常见问答集**是一个精心整理、易于访问的知识中心，旨在为您快速解答产品和服务相关的常见疑问。它汇集了用户普遍关注的问题及其官方解答，涵盖了从基础操作、功能特性到故障排除等各个方面。

通过 **FAQ 常见问答集**，可以：

* **快速查找信息：** 轻松找到您最关心问题的答案，无需等待。
* **高效解决问题：** 针对常见使用场景和技术难题，提供即时、有效的解决方案。
* **深入了解产品：** 全面掌握产品功能和最佳实践，提升使用体验。

具体功能如下：
- 需要增加一个用户页面FAQ，用于展示常见问答集，入口从左侧导航栏进入（显示为：图标+FAQ常见问答集），页面包含：问题(包含信息：仪器类型，系列，型号，软件版本，问题详述)，答案，点赞（点赞数，点赞用户），复制（复制答案）。
- 需要增加一个问题详情页面，用于展示问题详情，包含：问题(包含信息：仪器类型，系列，型号，软件版本，问题详述)，答案，点赞（点赞数，点赞用户），复制（复制答案）。
- 需要增加后台管理，用于维护常见问答集，使用csv文件导入的方式增加问答，需要使用管理员账户登录初始账号和密码都为admin。

## 2. 目标用户

- **普通用户（游客与注册用户）**: 通过搜索和过滤，高效解决具体问题；通过浏览热门和最佳问答，学习和发现产品知识。
- **管理员/运营团队**: 管理知识分类体系（分类、机型、标签），监控用户关注点，分析数据以优化产品文档和支持策略，FAQ的所有内容都是有管理员维护。


## 3. 功能需求详述
### 3.1. 核心交互功能

#### 3.1.1. 搜索功能
- **全局搜索框**: 在问答集页面顶部提供一个醒目的搜索框。
- **搜索范围**: 搜索应覆盖问题标题、问题内容、答案内容以及相关标签。
- **实时反馈**: (可选) 实现搜索词输入时的即时建议或结果预览。

#### 3.1.2. 过滤系统
用户可以组合使用以下一个或多个过滤器来缩小问题列表的范围：
- **仪器类型 (Instrument Type)**: 按仪器类型进行过滤。
  - **实现方式**: 以标签或下拉菜单形式提供。
  - **示例**: `示波器`, `信号发生器`, `万用表`, `电源`等。
- **系列机型 (Instrument Series)**: 按具体的产品系列进行过滤。
  - **实现方式**: 级联选择或带搜索功能的下拉菜单。
  - **示例**: `ADS800A`, `ADS900A`, `ADS3000`等。
- **标签 (Tags)**: 按功能、技术点或问题属性进行过滤。
  - **实现方式**: 可多选的标签云或标签列表。
  - **示例**: `测量`, `触发`, `光标`, `FFT`, `XY`, `固件升级`, `PC软件`等。

#### 3.1.3. 排序与视图
在过滤结果的基础上，用户可以通过切换Tab或视图来对问题进行排序。
- Tab 包含：
  - **最新 (Latest)**:
    - **排序规则**: 按问题的创建时间降序排列，最新的在前。
    - **用途**: 方便用户查看社区的最新动态和新增问题。
  - **最佳排行 (Best)**:
    - **排序规则**: 按问题的累计“点赞数 (👍)”降序排列，点赞最多的在前。
    - **用途**: 帮助用户快速找到经过社区验证的高质量、高认可度的答案。
  - **关注排行 (Ranking)**:
    - **排序规则**: 按问题的累计“观看量 (Views)”降序排列，观看量最高的在前。
    - **用途**: 洞察在特定时期内最受关注的热点问题。
- 视图包含：
  - 列表（只显示问题标题，点赞数，观看量）
  - 卡片（显示问题标题，点赞数，观看量，问题详情，答案前300字）

- 最佳排行 和 关注排行, 视图下必须提供一个时间范围选择器（如下拉菜单），允许用户查看不同时间段内的排行：
    - `本周`
    - `本月`
    - `本季度`
    - `本年`
    - `总排行`


### 3.2. 列表与数据展示
- **列表项**: 每个问题在列表中应展示：
  - 问题标题
  - 关键指标：`回复数`, `观看量`, `点赞数`。
  - 相关标签和分类。
  - 最新活动时间。
- **详情页**: 点击问题进入详情页，展示完整的问答对话。

### 3.3. 管理员后台功能
- **分类管理**: 增、删、改、查产品分类。
- **系列机型管理**: 增、删、改、查系列机型，并可与“分类”关联。
- **标签管理**: 增、删、改、查标签，查看各标签下的问题数量。
- **问答管理**: 管理员可以为问题添加或移除标签、分类和机型，以保证知识库的整洁和准确。

## 4. 数据库设计

为了兼容现有 Cloudflare D1（SQLite） 数据库及现有 `User`、`support_tickets` 等表的命名风格，FAQ 相关数据表全部采用下划线命名并统一加 `faq_` 前缀。所有主键均使用 `TEXT PRIMARY KEY DEFAULT (lower(hex(randomblob(16))))` 生成 32 位 UUID，时间字段使用 `created_at` / `updated_at`，默认值为 `strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime')`。

| 表名 | 说明 |
| ---- | ---- |
| `faq_categories` | 产品大类，如“示波器” |
| `faq_product_models` | 具体系列 / 机型，与 `faq_categories` 关联 |
| `faq_tags` | 标签维度 |
| `faq_questions` | 问题 + 答案（Markdown），一问一答 |
| `faq_question_tags` | 问题-标签多对多关联表 |
| `faq_likes` | 点赞记录（问题） |

字段设计（*PK / FK* 已在括号中注明）：

- **faq_categories**  
  - `id` *PK*, `name` TEXT NOT NULL UNIQUE, `description` TEXT NULL, `created_at` TEXT  
- **faq_product_models**  
  - `id` *PK*, `category_id` *FK → faq_categories.id* NULL, `name` TEXT NOT NULL, `created_at` TEXT  
- **faq_tags**  
  - `id` *PK*, `name` TEXT NOT NULL UNIQUE, `created_at` TEXT  
- **faq_questions**  
  - `id` *PK*, `title` TEXT NOT NULL, `content` TEXT NOT NULL,  
  - `answer` TEXT NOT NULL,  -- Markdown 格式官方答案  
  - `category_id` *FK* NULL, `product_model_id` *FK* NULL, `software_version` TEXT NULL,  
  - `views_count` INTEGER NOT NULL DEFAULT 0, `likes_count` INTEGER NOT NULL DEFAULT 0,  
  - `created_by` *FK → User.id* NULL, `created_at` TEXT, `updated_at` TEXT  
- **faq_question_tags**  
  - `question_id` *FK*, `tag_id` *FK*, PRIMARY KEY (`question_id`, `tag_id`)  
- **faq_likes**  
  - `id` *PK*, `user_id` *FK → User.id* NOT NULL,  
  - `question_id` *FK* NOT NULL,  
  - `created_at` TEXT,  
  - UNIQUE (`user_id`, `question_id`)  

> 说明：  
> 1. FAQ 现采用“一问一答”模型，官方答案直接存储在 `faq_questions.answer` 字段中（Markdown）。  
> 2. `faq_likes` 仅针对问题本身进行点赞。  
> 3. `likes_count`、`views_count` 为冗余字段，用于快速排序；由触发器或应用层维护同步。  
> 3. 所有外键统一 `ON DELETE SET NULL / CASCADE`，避免级联删除导致数据丢失。

## 5.1. API 路由命名调整（改为 /api/faq/*）

- `GET /api/faq` 获取 FAQ 列表（原 `/api/qna`）。  
- `GET /api/faq/:id` 获取单条 FAQ 详情。  
- `GET /api/faq/filters` 获取过滤器选项（原 `/api/filters`）。  
- 其余派生接口（如点赞）同理替换为 `/api/faq` 前缀。  

## 6. 非功能性需求

- **性能**: 复杂的过滤和排序查询响应时间应在1秒以内。需要对数据库查询进行优化，并可能使用缓存。
- **可用性**: 过滤和排序控件必须直观易用，在移动设备上也要有良好的体验。
- **数据准确性**: 观看量、点赞数等统计数据必须准确。观看量应有防刷机制（如限制同一用户短时间内的重复计数）。 

## 7. 安全与权限
- **角色划分**  
  - `guest`：仅浏览与搜索, 点赞提示注册或登录。  
  - `user`：可点赞／取消点赞、复制答案。  
  - `admin`：后台管理、CSV 导入、软删除。  
- **访问控制**  
  - 前端根据 `role` 动态显示入口；后端统一使用中间件校验 JWT。  
- **数据保护**  
  - 点赞接口使用 POST，校验 `Origin`，防 CSRF。  

## 8. CSV 导入与批量管理
- **文件格式**：UTF-8；表头 `instrument_type,series,model,software_version,title,content,tags`。  
- **导入流程**：上传 → 生成 `import_job` → worker 异步解析 → 状态回写。  
- **冲突策略**：以 `title + model + software_version` 为唯一键；冲突则更新。  

## 9. 交互细节
- **点赞**：禁止重复；再次点击取消；前端乐观更新。  
- **复制答案**：弹出 Toast `已复制到剪贴板`；埋点 `copy_answer`。  

## 10. 可访问性
- 元素提供 `aria-label`；颜色对比度符合 WCAG 2.1 AA。  

## 11. 日志与监控
- 行为日志写入 `faq_analytics`；监控接入 Cloudflare Analytics & Sentry。  

## 12. 上线 & 迭代计划
| 里程碑 | 目标 | 预计完成 |
| --- | --- | --- |
| M1 | DB 迁移脚本、FAQ 列表页 | +1 周 |
| M2 | 搜索 / 过滤 / 排序、点赞、复制 | +3 周 |
| M3 | CSV 导入、后台管理 | +5 周 |
| M4 | 可访问性、监控告警 | +7 周 | 